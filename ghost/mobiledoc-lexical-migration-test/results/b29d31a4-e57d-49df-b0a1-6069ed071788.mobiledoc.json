{
  "version": "0.3.1",
  "atoms": [],
  "cards": [
    [
      "html",
      {
        "html": "\r\n<p class=\"has-drop-cap\">Gauge is an open source test automation framework which is developed by ThoughtWorks. Along with being cross platform, it supports many popular languages such as Ruby, Java, C#, Python etc.</p>\r\n\r\n\r\n\r\n<p><strong><a href=\"https://gauge.org/\">Gauge</a></strong> is a cross-platform test automation tool that makes use of markdown for developing test cases along with test scenarios. A markdown is an effortless markup language that helps in formatting plain text. It is a way of styling text on the web, with markup you can bold, italic your plain text, you can add bullets, headers, footers and soon. Markdown is used commonly today because of the way it is written. It helps to transfer the code or text across various platforms and applications such as mobile, a browser etc. Earlier the same process required a word application. Gauge, therefore, takes advantage in a similar way. Gauge has also been appreciated by the testers community and developers community for optional support of the IDEs i.e. Gauge tests can also be used by command line support with the continuous integration software like Jenkins.  </p>\r\n\r\n\r\n\r\n<h2>Gauge and web drivers</h2>\r\n\r\n\r\n\r\n<p>A web driver is a web automation framework that allows you to execute your tests against different browsers.  In simpler terms, we use a web driver to see that we are getting what we expect in our web application.  Selenium is one such web driver. Selenium automatically simulates the user entries in a selected web browser. Selenium is used most commonly for this purpose and Gauge suits it for providing a framework for testing.  So you can set up your framework with Selenium quite easily and run your tests with its help.</p>\r\n\r\n\r\n\r\n<h2>Why Gauge?</h2>\r\n\r\n\r\n\r\n<p>Gauge provides parallel execution. Similar to the parallel processing in processors, parallel execution can help us run big automated tests in a simple and quick manner. Gauge has many pros on its side which makes it one of the best choices for the developers and testers.</p>\r\n\r\n\r\n\r\n<ul>\r\n<li>Gauge is available in single binary and there is no pre-requisite required. This single binary can be used on all platforms.</li>\r\n<li>Gauge is available with many templates to just start and run your project. It has reduced the automation framework setup time reasonably well.</li>\r\n<li>Gauge has tremendously easy syntax to learn and write. As discussed above it uses markdown format which is very friendly for a tester.</li>\r\n<li>Gauge supports internationalization by default. It can help you write the specs in the language you prefer in your business which need not be English</li>\r\n<li>The reusability of Gauge is one of the main features which makes it stand apart. We can reuse the steps from one scenario to another scenario. We can also define steps to run before each scenario while writing the specifications.</li>\r\n<li>Gauge has huge support of plugins. Plugins in gauge can be written in any language of your choice and can be used to extend its functionality.</li>\r\n</ul>\r\n\r\n\r\n\r\n<p>After all these features it is quite clear that Gauge is a powerful tool and is important in the industry today.</p>\r\n\r\n\r\n\r\n<h2>Gauge for TDD and BDD</h2>\r\n\r\n\r\n\r\n<p>TDD is Test Driven Development in which the requirements are converted to the test cases in a particular language in which the tests will be done. This is performed on a very short development cycle but with a very wide test coverage (almost 95%) which makes the development and maintenance of the code easy. The following sequence is used in the TDD approach</p>\r\n\r\n\r\n\r\n<ul>\r\n<li><em>Add a test</em></li>\r\n<li><em>Run all the test and see if the new code fails</em></li>\r\n<li><em>Write new tests</em></li>\r\n<li><em>Run it</em></li>\r\n<li><em>Refactor</em></li>\r\n<li><em>Repeat</em></li>\r\n</ul>\r\n\r\n\r\n\r\n<p>BDD or Behavior Driven Development is born from TDD techniques. BDD or Behavior-Driven Development uses the basic principle and techniques of TDD but the main power of BDD is that the management and development teams collaborate for software development. Here the implementation is not tested but the behavior. The main focus is not the implementation but the scenario in a BDD approach. Needless to say, if non-technical and technical teams are sitting together, the language used is natural like English-like language sentence.</p>\r\n\r\n\r\n\r\n<p>This approach is most popular and BDD approach is supported by Gauge. Gauge framework as we discussed above uses the scenarios in Behaviour driven approach.  Gauge framework&#8217;s support and strength of command line interface help to provide the test cases in the business language. Since BDD is used along with the TDD and unit testing, Gauge serves as a perfectly reliable tool for testing purposes in BDD and TDD.         </p>\r\n\r\n\r\n\r\n<h2>Advantages of Gauge</h2>\r\n\r\n\r\n\r\n<p>Apart from the key features, we discussed above in the section &#8220;Why to use Gauge&#8221;. Gauge comes with many advantages for the testing and development team.</p>\r\n\r\n\r\n\r\n<ul>\r\n<li><strong>Gauge uses data store concept</strong> which means global data can be passed in different steps in different classes at runtime. This is a much-appreciated feature among the development team.</li>\r\n<li><strong>No Parse logic for larger files</strong>. Gauge framework does not require to write the parsing logic for large files, instead, the data can be simply passed by files and tables.</li>\r\n<li><strong>Easy Reporting</strong>. Gauge framework provides easy and convenient HTML reports to study after the test run. No addition step code is required for generating the reports in Gauge.</li>\r\n<li><strong>Run Failed test alone</strong>. Gauge framework provides the ability to run the failed test alone.</li>\r\n<li><strong>Unique step implementation</strong>. Gauge framework allows us to develop one step implementation which can then be used in the whole project.</li>\r\n<li><strong>Platform independent.</strong> Gauge is platform independent.</li>\r\n</ul>\r\n\r\n\r\n\r\n<p>All the above features and advantages come as an open source in Gauge.</p>\r\n\r\n\r\n\r\n<h2>Gauge for cross browser compatibility</h2>\r\n\r\n\r\n\r\n<p><a href=\"http://www.lambdatest.com?fp_ref=jeff43\">Cross Browser testing</a> is a process of testing a web app or a website on different browsers running on a variety of operating systems with respect to the device being used to access the application.  However, maintaining a library of browsers and devices could be very strenuous. After all, you are targeting customers from all over the internet. This is where cross browser testing tools like <a href=\"http://www.lambdatest.com?fp_ref=jeff43\">LambdaTest</a> comes into play, so you could test your application over thousands of browsers and browser versions through virtual machines running over their cloud servers for cross browser compatibility.  </p>\r\n\r\n\r\n\r\n<p>Gauge is today gaining popularity more than ever in this Cucumber dominated area of <a href=\"https://www.pcloudy.com/cross-browser-testing/\">cross browser testing</a>. Being developed by ThoughtWorks, the same group that brought Selenium, Gauge offers compatibility with Selenium webdriver. For testing on different browsers, we can combine the power of Gauge to Selenium and create a perfect testing suite for our application to run it in different browsers for cross browser testing.  While Gauge supports many languages and templates along with the plugins, it is easy to learn syntax makes it super easy for anyone to develop and run the test suites for his website. While this was earlier done only by the technical persons, Gauge has made it easier to develop these test suites by non-technical persons too. By this, test suites are even created before the coding is done. While time plays an important role for every company and person, Gauge provides the most time efficient solution for testing your website on different platforms with an easy code.</p>\r\n\r\n\r\n\r\n<p>This is a simple test suite written in Gauge for a customer sign up. The following lines represent the specs written in gauge framework.</p>\r\n\r\n\r\n\r\n<p><strong>Customer sign-up<br />================<br /></strong><br />* Go to sign up page<br /><br /><strong>Customer sign-up<br />&#8212;&#8212;&#8212;&#8212;&#8212;-<br /></strong>tags: sign-up, customer<br /><br />* Sign up a new customer with name &#8220;Harish&#8221; email &#8220;harish@lambdatest.com&#8221; and &#8220;password&#8221;<br />* Check if the sign up was successful</p>\r\n\r\n\r\n\r\n<p>These steps are needed to be linked to the Java functions. This is done using the @Step annotation in Java.</p>\r\n\r\n\r\n\r\n<pre class=\"wp-block-preformatted\">public class <strong>CustomerSignup</strong> {\r\n\r\n    @Step(\"Sign up as &lt;customer&gt; with email &lt;harish@lambdatest.com&gt;\r\nand &lt;password&gt;\")\r\n\r\n    public void registerCustomerWith(String customer, String email, String password) {\r\n\r\n        WebDriver webDriver = Driver.webDriver;\r\n\r\n        WebElement form = webDriver.findElement(By.id(\"new_user\"));\r\n\r\n        form.findElement(By.name(\"user[username]\")).sendKeys(customer);\r\n\r\n        form.findElement(By.name(\"user[email]\")).sendKeys(email);\r\n\r\n        form.findElement(By.name(\"user[password]\")).sendKeys(password);\r\n\r\n        form.findElement(By.name(\"user[password_confirmation]\")).sendKeys(password);\r\n\r\n        form.findElement(By.name(\"commit\")).click();\r\n\r\n    }\r\n\r\n    @Step(\"Check if the sign up was successful\")\r\n\r\n    public void checkSignUpSuccessful() {\r\n\r\n        WebDriver webDriver = Driver.webDriver;\r\n\r\n        WebElement message = webDriver.findElements(By.className(\"message\"));\r\n\r\n        assertThat(message.getText(), is(\"You have been\r\nsigned up successfully!\"));\r\n\r\n    }\r\n\r\n}</pre>\r\n\r\n\r\n\r\n<p>The above code snippet is shown to make you familiar with how Markdown syntax of Gauge is converted to the Step annotation in Java. You just have to pass the parameters and the code will be ready.</p>\r\n\r\n\r\n\r\n<h2>Conclusion</h2>\r\n\r\n\r\n\r\n<p>So summarizing this article, Gauge is an open source BDD tool (while the official website likes not to focus on BDD) which comes with tons of features and advantages. Gauge framework has been vogue in the IT industry &amp; as a result, there is also an increase in the plugin development which is the main strength of any software. In the field of cross browser testing one can use online platforms such as <a href=\"http://www.lambdatest.com?fp_ref=jeff43\">LambdaTest</a> where it is easier and convenient to test on 2000+ browsers in real time with reports and screenshots. Gauge can be combined with selenium for achieving the same purpose. A platform independent and supported by many languages, this framework is definitely worth exploring, using and learning.</p>\r\n"
      }
    ]
  ],
  "markups": [],
  "sections": [
    [
      10,
      0
    ],
    [
      1,
      "p",
      []
    ]
  ],
  "ghostVersion": "3.0"
}